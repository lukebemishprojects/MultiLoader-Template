plugins {
    id 'shared'
}

configurations {
    commonJava{
        canBeResolved = true
    }
    commonResources{
        canBeResolved = true
    }
    commonAccessWidener{
        canBeResolved = true
    }
}

dependencies {
    compileOnly(project(':common')) {
        capabilities {
            requireCapability "$group:$artifact_id"
        }
    }
    commonJava project(path: ':common', configuration: 'commonJava')
    commonResources project(path: ':common', configuration: 'commonResources')
    commonAccessWidener project(path: ':common', configuration: 'commonAccessWidener')
}

tasks.named('compileJava', JavaCompile) {
    dependsOn(configurations.commonJava)
    source(configurations.commonJava)
}

processResources {
    dependsOn(configurations.commonResources)
    from(configurations.commonResources)
}

tasks.named('javadoc', Javadoc).configure {
    dependsOn(configurations.commonJava)
    source(configurations.commonJava)
}

tasks.named("sourcesJar", Jar) {
    dependsOn(configurations.commonJava)
    from(configurations.commonJava)
    dependsOn(configurations.commonResources)
    from(configurations.commonResources)
}
